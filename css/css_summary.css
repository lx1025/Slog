css书写规范：https://github.com/fex-team/styleguide/blob/master/css.md*/

/*所有的样式会根据下面的规则层叠于一个新的虚拟样式表中
由低到高依次是：
浏览器缺省设置
外部样式表
内部样式表（位于 <head> 标签内部）
内联样式（在 HTML 元素内部）*/

/*关于多重样式：如果某些属性在不同的样式表中被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来,例如*/
/*外部样式表拥有针对 h3 选择器的三个属性：*/
h3 {
    color:red;
    text-align:left;
    font-size:8pt;
}
/*而内部样式表拥有针对 h3 选择器的两个属性：*/
h3 {
    text-align:right;
    font-size:20px;
}
/*假如拥有内部样式表的这个页面同时与外部样式表链接，那么 h3 得到的样式是：*/
h3 {
color:red;
text-align:right;
font-size:20pt;
}

/*外部样式表：
<head>
<link rel="stylesheet" type="text/css" href="mystyle.css" />
</head> */
mystyle.css:
hr {color: sienna;}
p {margin-left: 20px;}
body {background-image: url("images/back40.gif");}
/*内部样式表：*/
<head>
<style type="text/css">  type  可省
  hr {color: sienna;}
  p {margin-left: 20px;}
  body {background-image: url("images/back40.gif");}
</style>
</head>
/*内联样式表：*/
<p style="color: sienna; margin-left: 20px">
This is a paragraph
</p>

/*文本属性：
color   设置文本颜色
direction   设置文本方向。
letter-spacing  设置字符间距
line-height 设置行高
text-align  对齐元素中的文本
text-decoration 向文本添加修饰
text-indent 缩进元素中文本的首行
text-shadow 设置文本阴影
text-transform  控制元素中的字母
*/

/*链接属性：*/
a:link {color:#FF0000;text-decoration:none;background-color:#B2FF99;}      /* 未访问链接*/
a:visited {color:#00FF00;}  /* 已访问链接 */
a:hover {color:#FF00FF;}  /* 鼠标移动到链接上 */
a:active {color:#0000FF;}  /* 已访问过的链接 */

/*有序无序list元素的序号风格：*/
ul.a {list-style-type:circle;}
ul.b {list-style-type:square;}
ol.c {list-style-type:upper-roman;}
ol.d {list-style-type:lower-alpha;}
ol.e {list-style-image: url('sqpurple.gif');}
ol.e {list-style:square url("sqpurple.gif");} 图像风格转化

/*彻底解决css选择器*/
/*元素选择器*/
html {color:black;}
p {color:gray;}
/*选择器分组*/
body, h2, p, table, th, td, pre, strong, em {color:gray;}
/*通配符选择器*/
* {color:red;}
/*类选择器
<p class="important warning">
This paragraph is a very important warning.
</p>*/
.important {font-weight:bold;}
.warning {font-style:italic;}
.important.warning {background:silver;}
/*id选择器*/
#mostImportant {color:red; background:yellow;}
/*属性选择器*/
*[title] {color:red;}
a[href] {color:red;}
img[alt] {border: 5px solid red;}
/*后代选择器*/
h1 em {color:red;}
/*子元素选择器, */
/*如果您不希望选择任意的后代元素，而是希望缩小范围，只选择某个元素的子元素*/
h1>strong {color:red;}
/*相邻兄弟选择器*/
/*读作，将h1元素之后的的兄弟p元素巴拉巴拉*/
h1 + p {margin-top:50px;}
/*读作，将li元素之后的的兄弟li元素巴拉巴拉*/
li + li {font-weight:bold;} /*第一个li元素没有样式*/
/*伪类选择器*/
a:link {color:#FF0000;text-decoration:none;background-color:#B2FF99;}      /* 未访问链接*/
a:visited {color:#00FF00;}  /* 已访问链接 */
a:hover {color:#FF00FF;}  /* 鼠标移动到链接上 */
a:active {color:#0000FF;}  /* 已访问过的链接 */
/*伪元素选择器*/
p:first-letter {color:#ff0000;}

/*彻底理解行高line-height*/
http://www.w3school.com.cn/tiy/t.asp?f=csse_dim_line-height_percent
/*根据百度前端规范，line-height应该用数值倍数定义*/
/*line_height:1.0本身就会形成间距，而大部分的浏览器的行高默认为1.1,1.2*/
http://m.studyofnet.com/news/273.html
你知道原因吗？https://zhidao.baidu.com/question/425857126386532692.html
浏览器显示最小字体是12px（百度前端规范），行高为10px，所以重叠。

/*理解em*/
px是绝对单位，不支持IE的缩放，em是相对单位。
1em指的是一个字体的大小，它会继承父级元素的字体大小，因此并不是一个固定的值。
不仅仅是字体，将行距line-height，和纵向高度的单位都用em。保证缩放时候的整体性。
em指字体高，任意浏览器的默认字体高都是16px。所以,未经调整的浏览器都符合:1em=16px。那么12px=0.75em,10px=0.625em。
https://segmentfault.com/q/1010000004704818/a-1020000004705715

/*清除浮动*/
http://www.jb51.net/css/173023.html
前五种

/*一个常用的组合*/
#id {
    display: none
}
$('#id').show()

/*弹性盒布局*/
/*Flex是Flexible Box的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。任何一个容器都可以指定为Flex布局。*/
/*http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html*/
.container {
    display: flex;
    flex-direction: row | row-reverse | column | column-reverse;
    flex-wrap: nowrap | wrap | wrap-reverse;
    justify-content: flex-start | flex-end | center | space-between | space-around;
    align-items: flex-start | flex-end | center | baseline | stretch;
    align-content: flex-start | flex-end | center | space-between | space-around | stretch;
}
.item {
    order: <integer>;
    flex-grow: <number>;
    flex-shrink: <number>;
    flex-basis: auto;
    flex: 0 1 auto;
}
/*使用弹性盒布局的两个例子：http://www.cnblogs.com/qq9694526/p/5713698.html*/
/*使用flex的传统布局*/
.container {
    display: flex;
    display: -webkit-flex;
    height: 50px;
}
.left {
    flex: 0 1 50px;
}
.right {
    flex: 1 1 auto;
    display: flex;
    display: flex;
    flex-direction: column;
}
.right .title {
    flex: 0 1 20px;
}
.right .desc {
    flex: 1 1 auto;
}
/*一行两列的例子*/
.container {
    display: flex;
    display: -webkit-flex;
    flex-wrap: wrap;
}
.item {
    flex: 0 1 50%;
    height: 30px;
}

/*内联样式的写法, 双引号分号*/
<p style="color: red;padding-top: 1px">something<p>

/*关于适配,真的最后一关了...*/
/*https://isux.tencent.com/web-app-rem.html*/
/*

/*Css盒模型:内容，border ,margin，padding*/

/*关于inline-block*/
/*block元素的特点是：
总是在新行上开始；
高度，行高以及顶和内边距都可控制；
宽度缺省是它的容器的100%，除非设定一个宽度
<div>, <p>, <h1>, <form>, <ul> 和 <li>是块元素的例子。*/
/*inline元素的特点是：
和其他元素都在一行上；
高，行高及顶和底边距不可改变；
宽度就是它的文字或图片的宽度，不可改变。*/
/*inline-block的元素特点：
应用此特性的元素呈现为行对象，和周围元素保持在同一行，但可以设置宽度和高度地块元素的属性*/
/*用法1:用于行内元素, 元素将可以设置宽度和高度和内边距, 用于设置背景图片*/
em {
    display: inline-block;
    width: 15px;
    height: 15px;
    margin-top: 2px;
    margin-right: 2px;
    background: url(http://zhibo.sogou.com/web2/images/sprite.png) -331px -298px no-repeat;
}
a {
   display: inline-block;
   width: 145px;
   height: 40px;
   overflow: hidden;
   background: url("http://zhibo.sogou.com/web2/images/sprite.png") -313px 0px no-repeat;
}
/*用法2:用于块元素, 将其展现为行内元素, 和周围元素同一个行显示, 此例效果为两个相邻的表单, 右为放大镜*/
.input1 {
    float: left;
    width: 200px;
    height: 20px;
    border: 1px solid #ffaca0;
    border-right: none;
    border-radius: 2px 0 0 2px;
    text-indent: 10px;
    line-height: 34px;
}
.input2 {
    display: inline-block;
    width: 74px;
    height: 36px;
    cursor: pointer;
    border: none;
    background: url("http://zhibo.sogou.com/web2/images/sprite.png") -219px -73px no-repeat;
}
